<%- include("../layouts/boilerplate") %>

<style>
  .container { max-width: 1200px; margin: 0 auto; }
  .table-wrapper { overflow-x: auto; }
  table { width: 100%; border-collapse: collapse; font-family: "Segoe UI", sans-serif; border: 1px solid #d1d5db; }
  th, td { border: 1px solid #e5e7eb; padding: 10px; font-size: 0.9rem; text-align: left; }
  th { background: #111827; color: white; text-transform: uppercase; font-size: 0.8rem; }
  tr:nth-child(even) td { background: #f9fafb; }
  .row-number { width: 50px; text-align: center; font-weight: bold; }
  .no-data { text-align: center; color: #b91c1c; padding: 12px; font-style: italic; }
  .badge { padding: 4px 8px; border-radius: 6px; font-size: 0.8rem; font-weight: 600; }
  .badge-leader { background: #bfdbfe; color: #1e3a8a; }
</style>

<div class="container">
  <h2 style="text-align:center; margin:20px 0;">
    Registrations for <%= event.eventName %>
  </h2>

  <div class="table-wrapper">
    <table>
      <thead>
        <tr>
          <th class="row-number">#</th>
          <% if (!(event.teamSize.max === 1 && event.teamSize.min === 1)) { %>
            <th>Team Name</th>
          <% } %>
          <th>Email</th>
          <% (event.formFields || []).forEach(field => { 
               if (field.label.toLowerCase() !== "email") { %> 
            <th><%= field.label %></th>
          <% } }) %>
          <th>Role</th>
        </tr>
      </thead>
      <tbody>
        <% 
        let displayCount = 0;
        if (!registrations || registrations.length === 0) { %>
          <tr>
            <td colspan="<%= (event.formFields?.length || 0) + (event.teamSize.max === 1 ? 3 : 4) %>" class="no-data">
              No registrations found.
            </td>
          </tr>
        <% } else { 
          registrations.forEach((registration, index) => { 
            const teamMembers = (registration.teamMembers || []).filter(m => m.status === "accepted");
            
            if (teamMembers.length === 0) return; // skip teams with no accepted members
            displayCount++;

            teamMembers.forEach((member, memberIndex) => { %>
              <tr>
                <% if (memberIndex === 0) { %>
                  <td class="row-number" rowspan="<%= teamMembers.length %>"><%= displayCount %></td>
                  <% if (!(event.teamSize.max === 1 && event.teamSize.min === 1)) { %>
                    <td rowspan="<%= teamMembers.length %>"><%= registration.teamName || "N/A" %></td>
                  <% } %>
                <% } %>

                <!-- ✅ Always show member email -->
                <td><%= member.email %></td>

                <!-- ✅ Smart field matching -->
                <% (event.formFields || []).forEach(field => { 
                     if (field.label.toLowerCase() !== "email") { 
                       const normalizedKey = field.label.toLowerCase().replace(/\s+/g, "_"); // space → underscore (lowercase)
                       const altKey = field.label.replace(/\s+/g, "_"); // preserve case but underscores
                       let value = "N/A";

                       if (member.fields) {
                         if (member.fields[field.label] !== undefined) {
                           value = member.fields[field.label];
                         } else if (member.fields[field.label.toLowerCase()] !== undefined) {
                           value = member.fields[field.label.toLowerCase()];
                         } else if (member.fields[normalizedKey] !== undefined) {
                           value = member.fields[normalizedKey];
                         } else if (member.fields[altKey] !== undefined) {
                           value = member.fields[altKey];
                         }
                       }
                %>
                  <td><%= value %></td>
                <% } }) %>

                <td>
                  <% if (memberIndex === 0) { %>
                    <span class="badge badge-leader">Leader</span>
                  <% } else { %>
                    Member
                  <% } %>
                </td>
              </tr>
            <% }) 
          }) 
        } %>
      </tbody>
    </table>
  </div>
</div>
